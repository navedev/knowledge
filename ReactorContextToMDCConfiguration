import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;
import org.springframework.context.annotation.Configuration;
import reactor.core.publisher.Hooks;
import reactor.core.publisher.Operators;

/**
 * Config class which adds Hooks (category of configurable callbacks) on all Flux/Mono Operators
 * which helps to copy current Context to MDC for logging
 * 
 * @author Naveen Devarajaiah
 *
 */
@Configuration
public class ReactorContextToMDCConfiguration {

  private static final String MDC_CONTEXT_REACTOR_KEY =
      ReactorContextToMDCConfiguration.class.getName();

  /**
   * onEachOperator = a type Assembly Hooks
   * <p>
   * These hooks are tied to the Life Cycle of Operators and helps to dynamically change those
   * operators
   * 
   * <p>
   * Operators.lift() = is used to Decorate all operators with Subscriber implementation which in
   * turn contains current Reactive Context
   * 
   */
  @PostConstruct
  private void contextOperatorHook() {
    Hooks.onEachOperator(MDC_CONTEXT_REACTOR_KEY,
        Operators.lift((scannable, coreSubscriber) -> new ReactorContextToMDCSubscriber<>(coreSubscriber)));
  }

  @PreDestroy
  private void cleanupHook() {
    Hooks.resetOnEachOperator(MDC_CONTEXT_REACTOR_KEY);
  }
}
